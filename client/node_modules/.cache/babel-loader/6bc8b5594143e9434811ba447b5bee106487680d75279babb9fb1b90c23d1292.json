{"ast":null,"code":"import React,{createContext,useContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const MarkerStateContext=/*#__PURE__*/createContext();export const useSharedState=()=>{return useContext(MarkerStateContext);};export const SharedStateProvider=_ref=>{let{children}=_ref;const[markers,setMarkers]=useState([]);const[markerIndex,setMarkerIndex]=useState(1);const[isModalOpen,setIsModalOpen]=useState(false);const[editButtonActive,setEditButtonActive]=useState(false);const[isMobile,setIsMobile]=useState(false);const[modalContent,setModalContent]=useState();const[editIndex,setEditIndex]=useState(0);const[isSharedLink,setIsSharedLink]=useState(false);const[sharedMarkers,setSharedMarkers]=useState([]);const[newSharingObject,setNewSharingObject]=useState({});const[tagInformation,setTagInformation]=useState({});const[markersLoaded,setMarkersLoaded]=useState(false);const[mapArray,setMapArray]=useState([]);const[rememberMe,setRememberMe]=useState(false);const[isLoggedIn,setIsLoggedIn]=useState(false);return/*#__PURE__*/_jsx(MarkerStateContext.Provider,{value:{markers,setMarkers,markerIndex,setMarkerIndex,isModalOpen,setIsModalOpen,editButtonActive,setEditButtonActive,modalContent,setModalContent,editIndex,setEditIndex,isMobile,setIsMobile,isSharedLink,setIsSharedLink,sharedMarkers,setSharedMarkers,newSharingObject,setNewSharingObject,tagInformation,setTagInformation,markersLoaded,setMarkersLoaded,mapArray,setMapArray,rememberMe,setRememberMe,isLoggedIn,setIsLoggedIn},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","MarkerStateContext","useSharedState","SharedStateProvider","_ref","children","markers","setMarkers","markerIndex","setMarkerIndex","isModalOpen","setIsModalOpen","editButtonActive","setEditButtonActive","isMobile","setIsMobile","modalContent","setModalContent","editIndex","setEditIndex","isSharedLink","setIsSharedLink","sharedMarkers","setSharedMarkers","newSharingObject","setNewSharingObject","tagInformation","setTagInformation","markersLoaded","setMarkersLoaded","mapArray","setMapArray","rememberMe","setRememberMe","isLoggedIn","setIsLoggedIn","Provider","value"],"sources":["/home/jonas/web-projects/trash-tagger/frontend/src/SharedContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n\nconst MarkerStateContext = createContext();\n\nexport const useSharedState = () => {\n  return useContext(MarkerStateContext);\n};\n\nexport const SharedStateProvider = ({ children }) => {\n  const [markers, setMarkers] = useState([]);\n  const [markerIndex, setMarkerIndex] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editButtonActive, setEditButtonActive] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const [modalContent, setModalContent] = useState();\n  const [editIndex, setEditIndex] = useState(0);\n  const [isSharedLink, setIsSharedLink] = useState(false);\n  const [sharedMarkers, setSharedMarkers] = useState([]);\n  const [newSharingObject, setNewSharingObject] = useState({});\n  const [tagInformation, setTagInformation] = useState({});\n  const [markersLoaded, setMarkersLoaded] = useState(false);\n  const [mapArray, setMapArray] = useState([]);\n  const [rememberMe, setRememberMe] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  return (\n    <MarkerStateContext.Provider\n      value={{\n        markers,\n        setMarkers,\n        markerIndex,\n        setMarkerIndex,\n        isModalOpen,\n        setIsModalOpen,\n        editButtonActive,\n        setEditButtonActive,\n        modalContent,\n        setModalContent,\n        editIndex,\n        setEditIndex,\n        isMobile,\n        setIsMobile,\n        isSharedLink,\n        setIsSharedLink,\n        sharedMarkers,\n        setSharedMarkers,\n        newSharingObject,\n        setNewSharingObject,\n        tagInformation,\n        setTagInformation,\n        markersLoaded,\n        setMarkersLoaded,\n        mapArray,\n        setMapArray,\n        rememberMe,\n        setRememberMe,\n        isLoggedIn,\n        setIsLoggedIn,\n      }}\n    >\n      {children}\n    </MarkerStateContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,kBAAkB,cAAGL,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAM,cAAc,CAAGA,CAAA,GAAM,CAClC,MAAO,CAAAL,UAAU,CAACI,kBAAkB,CAAC,CACvC,CAAC,CAED,MAAO,MAAM,CAAAE,mBAAmB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC9C,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACU,WAAW,CAAEC,cAAc,CAAC,CAAGX,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACY,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACc,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAACgB,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACkB,YAAY,CAAEC,eAAe,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAClD,KAAM,CAACoB,SAAS,CAAEC,YAAY,CAAC,CAAGrB,QAAQ,CAAC,CAAC,CAAC,CAC7C,KAAM,CAACsB,YAAY,CAAEC,eAAe,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAACwB,aAAa,CAAEC,gBAAgB,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAC0B,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG3B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC5D,KAAM,CAAC4B,cAAc,CAAEC,iBAAiB,CAAC,CAAG7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxD,KAAM,CAAC8B,aAAa,CAAEC,gBAAgB,CAAC,CAAG/B,QAAQ,CAAC,KAAK,CAAC,CACzD,KAAM,CAACgC,QAAQ,CAAEC,WAAW,CAAC,CAAGjC,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACkC,UAAU,CAAEC,aAAa,CAAC,CAAGnC,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACoC,UAAU,CAAEC,aAAa,CAAC,CAAGrC,QAAQ,CAAC,KAAK,CAAC,CAEnD,mBACEE,IAAA,CAACC,kBAAkB,CAACmC,QAAQ,EAC1BC,KAAK,CAAE,CACL/B,OAAO,CACPC,UAAU,CACVC,WAAW,CACXC,cAAc,CACdC,WAAW,CACXC,cAAc,CACdC,gBAAgB,CAChBC,mBAAmB,CACnBG,YAAY,CACZC,eAAe,CACfC,SAAS,CACTC,YAAY,CACZL,QAAQ,CACRC,WAAW,CACXK,YAAY,CACZC,eAAe,CACfC,aAAa,CACbC,gBAAgB,CAChBC,gBAAgB,CAChBC,mBAAmB,CACnBC,cAAc,CACdC,iBAAiB,CACjBC,aAAa,CACbC,gBAAgB,CAChBC,QAAQ,CACRC,WAAW,CACXC,UAAU,CACVC,aAAa,CACbC,UAAU,CACVC,aACF,CAAE,CAAA9B,QAAA,CAEDA,QAAQ,CACkB,CAAC,CAElC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}