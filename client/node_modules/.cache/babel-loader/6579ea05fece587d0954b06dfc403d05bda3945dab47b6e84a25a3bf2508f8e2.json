{"ast":null,"code":"var _jsxFileName = \"/home/jonas/web-projects/trash-tagger/frontend/src/components/buttons/ButtonShareMarkers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSharedState } from \"../../SharedContext.jsx\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ButtonShareMarkers() {\n  _s();\n  const {\n    sharedMarkers,\n    setSharedMarkers\n  } = useSharedState();\n  const {\n    isSharedLink,\n    setIsSharedLink\n  } = useSharedState();\n  // eslint-disable-next-line no-unused-vars\n  const {\n    markersLoaded,\n    setMarkersLoaded\n  } = useSharedState();\n  const {\n    isMobile\n  } = useSharedState();\n  const {\n    mapArray\n  } = useSharedState();\n\n  // State for managing modal visibility and the shareable link\n  const [showModal, setShowModal] = useState(false);\n  const [shareableLink, setShareableLink] = useState(\"\");\n  const sendMarkerData = async () => {\n    const uuidMarkers = uuidv4();\n    const updatedUuidMarkers = sharedMarkers.map(marker => ({\n      ...marker,\n      groupId: uuidMarkers\n    }));\n    try {\n      const response = await fetch(\"https://localhost:5000/MarkerInformation\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedUuidMarkers)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Update the shareable link state and show the modal\n      const link = `https://localhost/shared-markers?groupId=${uuidMarkers}`;\n      setShareableLink(link);\n      setShowModal(true); // Show the modal with the link\n    } catch (error) {\n      console.error(\"Error sending marker data:\", error);\n    }\n  };\n  const fetchGroupMarkers = async groupId => {\n    const url = `https://localhost:5000/shared-markers?groupId=${groupId}`;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setSharedMarkers(data);\n      setIsSharedLink(true);\n      setMarkersLoaded(true);\n    } catch (error) {\n      console.error(\"Error fetching group markers:\", error);\n    }\n  };\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const groupId = queryParams.get(\"groupId\");\n    if (groupId) {\n      fetchGroupMarkers(groupId);\n    } else {\n      setMarkersLoaded(true);\n    }\n  }, []);\n\n  // Function to copy the shareable link to clipboard\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(shareableLink).then(() => {\n      // Optional: Display a message or change button text/state to indicate the link was copied\n    }, err => {\n      console.error(\"Could not copy text: \", err);\n    });\n  };\n\n  // Modal\n  const ShareModal = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1007] \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 rounded-lg shadow-lg flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Here's your shareable link:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        readOnly: true,\n        value: shareableLink,\n        className: \"text-center p-2 border border-gray-300 rounded mt-2\",\n        onClick: e => e.target.select()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-3 mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 my-auto  bg-blue-500 text-white rounded hover:bg-blue-700\",\n          onClick: copyToClipboard,\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 my-auto  bg-blue-500 text-white rounded hover:bg-blue-700\",\n          onClick: () => setShowModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showModal && /*#__PURE__*/_jsxDEV(ShareModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }, this), isMobile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMarkerData,\n        className: `send-button ${mapArray.length === 0 ? \"hidden\" : \"visible\"} text-xs px-3 text-center my-auto py-2 rounded-full share-button-mobile`,\n        children: \"Share tags!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !isSharedLink && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share-button-mobile body-font  text-xl backdrop-blur-xl flex px-5 py-4 rounded-full fixed mb-10 p4 bottom-2 mx-auto hover:bg-gray-400 \",\n          onClick: sendMarkerData,\n          children: \"Share tags!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}\n_s(ButtonShareMarkers, \"v5UgK6Y/TJZ6ZAy2xsGQQvCyobU=\", false, function () {\n  return [useSharedState, useSharedState, useSharedState, useSharedState, useSharedState];\n});\n_c = ButtonShareMarkers;\nexport default ButtonShareMarkers;\nvar _c;\n$RefreshReg$(_c, \"ButtonShareMarkers\");","map":{"version":3,"names":["React","useState","useEffect","useSharedState","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","ButtonShareMarkers","_s","sharedMarkers","setSharedMarkers","isSharedLink","setIsSharedLink","markersLoaded","setMarkersLoaded","isMobile","mapArray","showModal","setShowModal","shareableLink","setShareableLink","sendMarkerData","uuidMarkers","updatedUuidMarkers","map","marker","groupId","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","link","error","console","fetchGroupMarkers","url","data","json","queryParams","URLSearchParams","window","location","search","get","copyToClipboard","navigator","clipboard","writeText","then","err","ShareModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","readOnly","value","onClick","e","target","select","length","_c","$RefreshReg$"],"sources":["/home/jonas/web-projects/trash-tagger/frontend/src/components/buttons/ButtonShareMarkers.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSharedState } from \"../../SharedContext.jsx\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction ButtonShareMarkers() {\n  const { sharedMarkers, setSharedMarkers } = useSharedState();\n  const { isSharedLink, setIsSharedLink } = useSharedState();\n  // eslint-disable-next-line no-unused-vars\n  const { markersLoaded, setMarkersLoaded } = useSharedState();\n  const { isMobile } = useSharedState();\n  const { mapArray } = useSharedState();\n\n  // State for managing modal visibility and the shareable link\n  const [showModal, setShowModal] = useState(false);\n  const [shareableLink, setShareableLink] = useState(\"\");\n\n  const sendMarkerData = async () => {\n    const uuidMarkers = uuidv4();\n    const updatedUuidMarkers = sharedMarkers.map((marker) => ({\n      ...marker,\n      groupId: uuidMarkers,\n    }));\n\n    try {\n      const response = await fetch(\"https://localhost:5000/MarkerInformation\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updatedUuidMarkers),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Update the shareable link state and show the modal\n      const link = `https://localhost/shared-markers?groupId=${uuidMarkers}`;\n      setShareableLink(link);\n\n      setShowModal(true); // Show the modal with the link\n    } catch (error) {\n      console.error(\"Error sending marker data:\", error);\n    }\n  };\n\n  const fetchGroupMarkers = async (groupId) => {\n    const url = `https://localhost:5000/shared-markers?groupId=${groupId}`;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setSharedMarkers(data);\n      setIsSharedLink(true);\n      setMarkersLoaded(true);\n    } catch (error) {\n      console.error(\"Error fetching group markers:\", error);\n    }\n  };\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(window.location.search);\n    const groupId = queryParams.get(\"groupId\");\n\n    if (groupId) {\n      fetchGroupMarkers(groupId);\n    } else {\n      setMarkersLoaded(true);\n    }\n  }, []);\n\n  // Function to copy the shareable link to clipboard\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(shareableLink).then(\n      () => {\n        // Optional: Display a message or change button text/state to indicate the link was copied\n      },\n      (err) => {\n        console.error(\"Could not copy text: \", err);\n      }\n    );\n  };\n\n  // Modal\n  const ShareModal = () => (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1007] \">\n      <div className=\"bg-white p-4 rounded-lg shadow-lg flex flex-col items-center\">\n        <p>Here's your shareable link:</p>\n        <input\n          type=\"text\"\n          readOnly\n          value={shareableLink}\n          className=\"text-center p-2 border border-gray-300 rounded mt-2\"\n          onClick={(e) => e.target.select()}\n        />\n        <div className=\"flex gap-3 mt-3\">\n          <button\n            className=\"px-4 py-2 my-auto  bg-blue-500 text-white rounded hover:bg-blue-700\"\n            onClick={copyToClipboard}\n          >\n            Copy\n          </button>\n          <button\n            className=\"px-4 py-2 my-auto  bg-blue-500 text-white rounded hover:bg-blue-700\"\n            onClick={() => setShowModal(false)}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      {showModal && <ShareModal />}\n      {isMobile ? (\n        <>\n          <button\n            onClick={sendMarkerData}\n            className={`send-button ${\n              mapArray.length === 0 ? \"hidden\" : \"visible\"\n            } text-xs px-3 text-center my-auto py-2 rounded-full share-button-mobile`}\n          >\n            Share tags!\n          </button>\n        </>\n      ) : (\n        <>\n          {!isSharedLink && (\n            <div className=\"flex justify-center\">\n              <button\n                className=\"share-button-mobile body-font  text-xl backdrop-blur-xl flex px-5 py-4\n                 rounded-full fixed mb-10 p4 bottom-2 mx-auto hover:bg-gray-400 \"\n                onClick={sendMarkerData}\n              >\n                Share tags!\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default ButtonShareMarkers;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}