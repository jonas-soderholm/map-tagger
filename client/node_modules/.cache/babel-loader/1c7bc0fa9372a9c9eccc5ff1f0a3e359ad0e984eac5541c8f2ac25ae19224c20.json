{"ast":null,"code":"var _jsxFileName = \"/home/jonas/web-projects/trash-tagger/frontend/src/components/view/Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useSharedState } from \"../../SharedContext.jsx\";\nimport Modal from \"../modal/Modal.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const maxAmmountOfTags = 11;\nexport function DeleteMarker(markers, setMarker, index) {\n  if (index >= 0 && index < markers.length) {\n    markers[index].remove();\n    const updatedMarkers = markers.filter((_, markerIndex) => markerIndex !== index);\n    setMarker(updatedMarkers);\n  }\n}\n_c = DeleteMarker;\nexport function createNewSharableMarker(_, lat, long, info) {\n  return {\n    id: 0,\n    latitude: lat,\n    longitude: long,\n    info: info\n  };\n}\nconst Map = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c2 = _s(({\n  onAddMark\n}) => {\n  _s();\n  // eslint-disable-next-line no-unused-vars\n  const {\n    markers,\n    setMarkers\n  } = useSharedState();\n  const mapRef = useRef(null);\n  const containerId = useRef(`map-${Date.now()}`);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState(\"\");\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const {\n    markerIndex,\n    setMarkerIndex\n  } = useSharedState();\n  const {\n    sharedMarkers,\n    setSharedMarkers\n  } = useSharedState();\n  // eslint-disable-next-line no-unused-vars\n  const {\n    newSharingObject,\n    setNewSharingObject\n  } = useSharedState();\n  const {\n    isSharedLink\n  } = useSharedState();\n  const {\n    markersLoaded\n  } = useSharedState();\n  const {\n    isLoggedIn\n  } = useSharedState();\n  // eslint-disable-next-line no-unused-vars\n  const [center, setCenter] = useState([0, 0]);\n  const zoom = 15;\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (isModalOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isModalOpen]);\n\n  // Initialize map\n  useEffect(() => {\n    if (!mapRef.current && document.getElementById(containerId.current)) {\n      mapRef.current = L.map(containerId.current);\n      mapRef.current.setView([0, 0], 3);\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution: \"Â© OpenStreetMap contributors\"\n      }).addTo(mapRef.current);\n      if (!isSharedLink && markersLoaded) {\n        const successCallback = position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          setCenter([latitude, longitude]);\n          mapRef.current.setView([latitude, longitude], zoom);\n          console.log(\"GPS location found\");\n        };\n        mapRef.current.on(\"locationerror\", function (e) {\n          console.error(\"Location error:\", e.message);\n        });\n        const errorCallback = error => {\n          console.error(\"Location error:\", error.message);\n        };\n        navigator.geolocation.getCurrentPosition(successCallback, errorCallback, {\n          timeout: 20000\n        });\n      } else if (isSharedLink && sharedMarkers.length > 0) {\n        const latitude = sharedMarkers[0].latitude;\n        const longitude = sharedMarkers[0].longitude;\n        const userLocation = [latitude, longitude];\n        setCenter(userLocation);\n        mapRef.current.setView(userLocation, zoom);\n      }\n\n      // User clicks on map\n      if (!isSharedLink) {\n        mapRef.current.on(\"click\", function (e) {\n          setMarkerIndex(prevIndex => {\n            if (prevIndex < maxAmmountOfTags) {\n              setIsModalOpen(true);\n            }\n            setMarkerPosition(e.latlng);\n            return prevIndex;\n          });\n        });\n      }\n\n      // // Add a marker for the shared location\n      if (isSharedLink && mapRef.current) {\n        console.log(sharedMarkers);\n        sharedMarkers.forEach((marker, i) => {\n          const markerHtml = `<div id=\"marker-${i + 1}\" style=\"display: flex; justify-content: center; align-items:\n            center; color: #e5e7eb; opacity: 92%; background: linear-gradient(0deg, rgb(33, 33, 33), rgb(79, 79, 79)); padding: 30px;\n             font-size: 23px; border-radius: 100%; height: 100%; width: 100%; transform:\n             translateX(${-20}px) translateY(${-20}px);\">${i + 1}</div>`;\n          L.marker([marker.latitude, marker.longitude], {\n            icon: L.divIcon({\n              className: \"background-color my-custom-marker body-font\",\n              html: markerHtml\n            })\n          }).addTo(mapRef.current);\n        });\n      }\n    }\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.off(\"click\");\n        mapRef.current.remove();\n        mapRef.current = null;\n      }\n    };\n  }, [zoom, setMarkerIndex, isSharedLink, markersLoaded, isLoggedIn]);\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setModalContent(\"\");\n  };\n\n  // Handle user click on map\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!modalContent.trim()) {\n      console.log(\"Content is empty, not submitting.\");\n      return;\n    }\n    if (markerPosition) {\n      const newIndex = markerIndex + 1;\n      setMarkerIndex(newIndex);\n      if (onAddMark) {\n        onAddMark(markerIndex, modalContent);\n      }\n      const newMarker = L.marker([markerPosition.lat, markerPosition.lng], {\n        icon: L.divIcon({\n          className: \"background-color my-custom-marker body-font\",\n          html: `<div id=\"marker-${markerIndex}\" style=\"display: flex; justify-content: center; align-items: \n          center; color: #e5e7eb; background: linear-gradient(0deg, rgb(33, 33, 33), rgb(79, 79, 79)); padding: 30px;\n           font-size: 23px; border-radius: 100%; opacity: 92%; height: 100%; width: 100%; transform: \n           translateX(${-20}px) translateY(${-20}px);\">${markerIndex}</div>`\n        })\n      }).addTo(mapRef.current);\n      setMarkers(prevMarkers => {\n        const updatedMarkers = [...prevMarkers, newMarker];\n        return updatedMarkers;\n      });\n      setModalContent(modalContent);\n\n      // Sharing object DB\n      const newShareTemp = createNewSharableMarker(0, markerPosition.lat, markerPosition.lng, modalContent);\n      setNewSharingObject(newShareTemp);\n      setSharedMarkers(prevSharedMarkers => [...prevSharedMarkers, newShareTemp]);\n      handleCloseModal();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" md:rounded-xl\",\n      id: containerId.current,\n      style: {\n        height: \"95.7vh\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      onSubmit: handleSubmit,\n      content: modalContent,\n      setContent: setModalContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"kVmR0nB4DQbbceJ/oUTiKuiBx1Y=\", false, function () {\n  return [useSharedState, useSharedState, useSharedState, useSharedState, useSharedState, useSharedState, useSharedState];\n})), \"kVmR0nB4DQbbceJ/oUTiKuiBx1Y=\", false, function () {\n  return [useSharedState, useSharedState, useSharedState, useSharedState, useSharedState, useSharedState, useSharedState];\n});\n_c3 = Map;\nexport default Map;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DeleteMarker\");\n$RefreshReg$(_c2, \"Map$React.memo\");\n$RefreshReg$(_c3, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useRef","L","useSharedState","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","maxAmmountOfTags","DeleteMarker","markers","setMarker","index","length","remove","updatedMarkers","filter","_","markerIndex","_c","createNewSharableMarker","lat","long","info","id","latitude","longitude","Map","_s","memo","_c2","onAddMark","setMarkers","mapRef","containerId","Date","now","isModalOpen","setIsModalOpen","modalContent","setModalContent","markerPosition","setMarkerPosition","setMarkerIndex","sharedMarkers","setSharedMarkers","newSharingObject","setNewSharingObject","isSharedLink","markersLoaded","isLoggedIn","center","setCenter","zoom","inputRef","current","focus","document","getElementById","map","setView","tileLayer","attribution","addTo","successCallback","position","coords","console","log","on","e","error","message","errorCallback","navigator","geolocation","getCurrentPosition","timeout","userLocation","prevIndex","latlng","forEach","marker","i","markerHtml","icon","divIcon","className","html","off","handleCloseModal","handleSubmit","preventDefault","trim","newIndex","newMarker","lng","prevMarkers","newShareTemp","prevSharedMarkers","children","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","onSubmit","content","setContent","_c3","$RefreshReg$"],"sources":["/home/jonas/web-projects/trash-tagger/frontend/src/components/view/Map.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useSharedState } from \"../../SharedContext.jsx\";\nimport Modal from \"../modal/Modal.jsx\";\n\nexport const maxAmmountOfTags = 11;\n\nexport function DeleteMarker(markers, setMarker, index) {\n  if (index >= 0 && index < markers.length) {\n    markers[index].remove();\n    const updatedMarkers = markers.filter((_, markerIndex) => markerIndex !== index);\n    setMarker(updatedMarkers);\n  }\n}\n\nexport function createNewSharableMarker(_, lat, long, info) {\n  return { id: 0, latitude: lat, longitude: long, info: info };\n}\n\nconst Map = React.memo(({ onAddMark }) => {\n  // eslint-disable-next-line no-unused-vars\n  const { markers, setMarkers } = useSharedState();\n  const mapRef = useRef(null);\n  const containerId = useRef(`map-${Date.now()}`);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState(\"\");\n  const [markerPosition, setMarkerPosition] = useState(null);\n  const { markerIndex, setMarkerIndex } = useSharedState();\n  const { sharedMarkers, setSharedMarkers } = useSharedState();\n  // eslint-disable-next-line no-unused-vars\n  const { newSharingObject, setNewSharingObject } = useSharedState();\n  const { isSharedLink } = useSharedState();\n  const { markersLoaded } = useSharedState();\n  const { isLoggedIn } = useSharedState();\n  // eslint-disable-next-line no-unused-vars\n  const [center, setCenter] = useState([0, 0]);\n  const zoom = 15;\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (isModalOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isModalOpen]);\n\n  // Initialize map\n  useEffect(() => {\n    if (!mapRef.current && document.getElementById(containerId.current)) {\n      mapRef.current = L.map(containerId.current);\n      mapRef.current.setView([0, 0], 3);\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution: \"Â© OpenStreetMap contributors\",\n      }).addTo(mapRef.current);\n\n      if (!isSharedLink && markersLoaded) {\n        const successCallback = (position) => {\n          const { latitude, longitude } = position.coords;\n          setCenter([latitude, longitude]);\n          mapRef.current.setView([latitude, longitude], zoom);\n          console.log(\"GPS location found\");\n        };\n\n        mapRef.current.on(\"locationerror\", function (e) {\n          console.error(\"Location error:\", e.message);\n        });\n\n        const errorCallback = (error) => {\n          console.error(\"Location error:\", error.message);\n        };\n\n        navigator.geolocation.getCurrentPosition(successCallback, errorCallback, { timeout: 20000 });\n      } else if (isSharedLink && sharedMarkers.length > 0) {\n        const latitude = sharedMarkers[0].latitude;\n        const longitude = sharedMarkers[0].longitude;\n        const userLocation = [latitude, longitude];\n        setCenter(userLocation);\n        mapRef.current.setView(userLocation, zoom);\n      }\n\n      // User clicks on map\n      if (!isSharedLink) {\n        mapRef.current.on(\"click\", function (e) {\n          setMarkerIndex((prevIndex) => {\n            if (prevIndex < maxAmmountOfTags) {\n              setIsModalOpen(true);\n            }\n            setMarkerPosition(e.latlng);\n\n            return prevIndex;\n          });\n        });\n      }\n\n      // // Add a marker for the shared location\n      if (isSharedLink && mapRef.current) {\n        console.log(sharedMarkers);\n        sharedMarkers.forEach((marker, i) => {\n          const markerHtml = `<div id=\"marker-${i + 1}\" style=\"display: flex; justify-content: center; align-items:\n            center; color: #e5e7eb; opacity: 92%; background: linear-gradient(0deg, rgb(33, 33, 33), rgb(79, 79, 79)); padding: 30px;\n             font-size: 23px; border-radius: 100%; height: 100%; width: 100%; transform:\n             translateX(${-20}px) translateY(${-20}px);\">${i + 1}</div>`;\n          L.marker([marker.latitude, marker.longitude], {\n            icon: L.divIcon({\n              className: \"background-color my-custom-marker body-font\",\n              html: markerHtml,\n            }),\n          }).addTo(mapRef.current);\n        });\n      }\n    }\n\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.off(\"click\");\n        mapRef.current.remove();\n        mapRef.current = null;\n      }\n    };\n  }, [zoom, setMarkerIndex, isSharedLink, markersLoaded, isLoggedIn]);\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setModalContent(\"\");\n  };\n\n  // Handle user click on map\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!modalContent.trim()) {\n      console.log(\"Content is empty, not submitting.\");\n      return;\n    }\n\n    if (markerPosition) {\n      const newIndex = markerIndex + 1;\n      setMarkerIndex(newIndex);\n\n      if (onAddMark) {\n        onAddMark(markerIndex, modalContent);\n      }\n\n      const newMarker = L.marker([markerPosition.lat, markerPosition.lng], {\n        icon: L.divIcon({\n          className: \"background-color my-custom-marker body-font\",\n          html: `<div id=\"marker-${markerIndex}\" style=\"display: flex; justify-content: center; align-items: \n          center; color: #e5e7eb; background: linear-gradient(0deg, rgb(33, 33, 33), rgb(79, 79, 79)); padding: 30px;\n           font-size: 23px; border-radius: 100%; opacity: 92%; height: 100%; width: 100%; transform: \n           translateX(${-20}px) translateY(${-20}px);\">${markerIndex}</div>`,\n        }),\n      }).addTo(mapRef.current);\n\n      setMarkers((prevMarkers) => {\n        const updatedMarkers = [...prevMarkers, newMarker];\n        return updatedMarkers;\n      });\n\n      setModalContent(modalContent);\n\n      // Sharing object DB\n      const newShareTemp = createNewSharableMarker(0, markerPosition.lat, markerPosition.lng, modalContent);\n      setNewSharingObject(newShareTemp);\n      setSharedMarkers((prevSharedMarkers) => [...prevSharedMarkers, newShareTemp]);\n\n      handleCloseModal();\n    }\n  };\n\n  return (\n    <>\n      {/* Map */}\n      <div className=\" md:rounded-xl\" id={containerId.current} style={{ height: \"95.7vh\", width: \"100%\" }}></div>\n      {/* Modal */}\n      <Modal\n        isOpen={isModalOpen}\n        onClose={handleCloseModal}\n        onSubmit={handleSubmit}\n        content={modalContent}\n        setContent={setModalContent}\n      />\n    </>\n  );\n});\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}