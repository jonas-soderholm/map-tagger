{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"leaflet/dist/leaflet.css\";import{useSharedState}from\"../../SharedContext.jsx\";import{Routes,Route}from\"react-router-dom\";import{DeleteMarker}from\"./Map.jsx\";import{maxAmmountOfTags}from\"./Map.jsx\";import ViewMobileMain from\"./ViewMobile.jsx\";import ViewDesktopMain from\"./ViewDesktop.jsx\";import LoginForm from\"../auth/LoginForm.jsx\";import NotFoundPage from\"./NotFoundPage.jsx\";import{jsx as _jsx}from\"react/jsx-runtime\";function MainPage(){const[isModalOpen,setIsModalOpen]=useState(false);const[modalContent,setModalContent]=useState(\"\");const[editIndex,setEditIndex]=useState(0);const{markers,setMarkers}=useSharedState();const{markerIndex,setMarkerIndex}=useSharedState();const{isMobile}=useSharedState();// eslint-disable-next-line no-unused-vars\nconst{sharedMarkers,setSharedMarkers}=useSharedState();const{mapArray,setMapArray}=useSharedState();const{isSharedLink,setIsSharedLink}=useSharedState();const{isLoggedIn,setIsLoggedIn}=useSharedState();useEffect(()=>{// Check if user is logged in\nconst token=localStorage.getItem(\"token\");if(token){setIsLoggedIn(true);}// Check if the URL includes \"share\" to determine if it's a shared link\nconst checkIfSharedLink=()=>{const urlContainsShare=window.location.href.includes(\"shared-markers?groupId\");setIsSharedLink(urlContainsShare);console.log(\"is shared link. shared markers = \",sharedMarkers);};checkIfSharedLink();},[setIsSharedLink]);function handleDeleteClick(_,index){const newArray=[...mapArray];newArray.splice(index,1);setMapArray(newArray);setMarkers(index);DeleteMarker(markers,setMarkers,index);setMarkerIndex(newArray.length+1);updateMarkersAfterRemoval(index);function updateMarkersAfterRemoval(removedIndex){for(let i=0;i<=maxAmmountOfTags;i++){const markerElement=document.getElementById(\"marker-\".concat(i));if(markerElement){const currentMarkerNumber=parseInt(markerElement.id.replace(\"marker-\",\"\"),10);if(currentMarkerNumber>removedIndex){markerElement.textContent=currentMarkerNumber-1;markerElement.id=\"marker-\".concat(currentMarkerNumber-1);}}}}// Update shared after delete\nsetSharedMarkers(prevSharedMarkers=>{// Create a new array excluding the item at the specified index\nconst filteredMarkers=prevSharedMarkers.filter((_,itemIndex)=>itemIndex!==index);return filteredMarkers;});}function handleMapClicks(index,info){setMapArray(prevMapArray=>[...prevMapArray,info]);}function CloseModalWindow(){setIsModalOpen(false);setModalContent(\"\");}function ModalEditSubmit(){if(editIndex>=0&&editIndex<mapArray.length){let EditElement=document.querySelector(\".button-\".concat(editIndex));if(EditElement){EditElement.textContent=modalContent;}mapArray[editIndex]=modalContent;}setIsModalOpen(false);setSharedMarkers(prevSharedMarkers=>{if(prevSharedMarkers.length===0)return[];const updatedMarkers=[...prevSharedMarkers];updatedMarkers[editIndex]={...prevSharedMarkers[editIndex],info:modalContent};return updatedMarkers;});setModalContent(\"\");}function handleEditClick(index){setEditIndex(index);setIsModalOpen(true);}const viewProps={isModalOpen,CloseModalWindow,ModalEditSubmit,modalContent,setModalContent,handleMapClicks,mapArray,markerIndex,handleEditClick,handleDeleteClick};// if (!isLoggedIn && !isSharedLink) {\n//   return <LoginForm />;\n// }\nreturn isMobile?/*#__PURE__*/_jsx(ViewMobileMain,{...viewProps}):/*#__PURE__*/_jsx(ViewDesktopMain,{...viewProps});// <Routes>\n//   <Route path=\"/\" element={isMobile ? <ViewMobileMain {...viewProps} /> : <ViewDesktopMain {...viewProps} />} />\n//   <Route\n//     path=\"/shared-markers\"\n//     element={isMobile ? <ViewMobileMain {...viewProps} /> : <ViewDesktopMain {...viewProps} />}\n//   />\n//   <Route path=\"*\" element={<NotFoundPage />} />\n// </Routes>\n//return isMobile ? <ViewMobileMain {...viewProps} /> : <ViewDesktopMain {...viewProps} />;\n}export default MainPage;","map":{"version":3,"names":["React","useState","useEffect","useSharedState","Routes","Route","DeleteMarker","maxAmmountOfTags","ViewMobileMain","ViewDesktopMain","LoginForm","NotFoundPage","jsx","_jsx","MainPage","isModalOpen","setIsModalOpen","modalContent","setModalContent","editIndex","setEditIndex","markers","setMarkers","markerIndex","setMarkerIndex","isMobile","sharedMarkers","setSharedMarkers","mapArray","setMapArray","isSharedLink","setIsSharedLink","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","checkIfSharedLink","urlContainsShare","window","location","href","includes","console","log","handleDeleteClick","_","index","newArray","splice","length","updateMarkersAfterRemoval","removedIndex","i","markerElement","document","getElementById","concat","currentMarkerNumber","parseInt","id","replace","textContent","prevSharedMarkers","filteredMarkers","filter","itemIndex","handleMapClicks","info","prevMapArray","CloseModalWindow","ModalEditSubmit","EditElement","querySelector","updatedMarkers","handleEditClick","viewProps"],"sources":["/home/jonas/web-projects/trash-tagger/frontend/src/components/view/MainPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useSharedState } from \"../../SharedContext.jsx\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { DeleteMarker } from \"./Map.jsx\";\nimport { maxAmmountOfTags } from \"./Map.jsx\";\nimport ViewMobileMain from \"./ViewMobile.jsx\";\nimport ViewDesktopMain from \"./ViewDesktop.jsx\";\nimport LoginForm from \"../auth/LoginForm.jsx\";\nimport NotFoundPage from \"./NotFoundPage.jsx\";\n\nfunction MainPage() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState(\"\");\n  const [editIndex, setEditIndex] = useState(0);\n  const { markers, setMarkers } = useSharedState();\n  const { markerIndex, setMarkerIndex } = useSharedState();\n  const { isMobile } = useSharedState();\n  // eslint-disable-next-line no-unused-vars\n  const { sharedMarkers, setSharedMarkers } = useSharedState();\n  const { mapArray, setMapArray } = useSharedState();\n  const { isSharedLink, setIsSharedLink } = useSharedState();\n  const { isLoggedIn, setIsLoggedIn } = useSharedState();\n\n  useEffect(() => {\n    // Check if user is logged in\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      setIsLoggedIn(true);\n    }\n\n    // Check if the URL includes \"share\" to determine if it's a shared link\n    const checkIfSharedLink = () => {\n      const urlContainsShare = window.location.href.includes(\"shared-markers?groupId\");\n      setIsSharedLink(urlContainsShare);\n\n      console.log(\"is shared link. shared markers = \", sharedMarkers);\n    };\n\n    checkIfSharedLink();\n  }, [setIsSharedLink]);\n\n  function handleDeleteClick(_, index) {\n    const newArray = [...mapArray];\n    newArray.splice(index, 1);\n    setMapArray(newArray);\n    setMarkers(index);\n    DeleteMarker(markers, setMarkers, index);\n\n    setMarkerIndex(newArray.length + 1);\n    updateMarkersAfterRemoval(index);\n\n    function updateMarkersAfterRemoval(removedIndex) {\n      for (let i = 0; i <= maxAmmountOfTags; i++) {\n        const markerElement = document.getElementById(`marker-${i}`);\n        if (markerElement) {\n          const currentMarkerNumber = parseInt(markerElement.id.replace(\"marker-\", \"\"), 10);\n\n          if (currentMarkerNumber > removedIndex) {\n            markerElement.textContent = currentMarkerNumber - 1;\n            markerElement.id = `marker-${currentMarkerNumber - 1}`;\n          }\n        }\n      }\n    }\n\n    // Update shared after delete\n    setSharedMarkers((prevSharedMarkers) => {\n      // Create a new array excluding the item at the specified index\n      const filteredMarkers = prevSharedMarkers.filter((_, itemIndex) => itemIndex !== index);\n      return filteredMarkers;\n    });\n  }\n\n  function handleMapClicks(index, info) {\n    setMapArray((prevMapArray) => [...prevMapArray, info]);\n  }\n\n  function CloseModalWindow() {\n    setIsModalOpen(false);\n    setModalContent(\"\");\n  }\n\n  function ModalEditSubmit() {\n    if (editIndex >= 0 && editIndex < mapArray.length) {\n      let EditElement = document.querySelector(`.button-${editIndex}`);\n      if (EditElement) {\n        EditElement.textContent = modalContent;\n      }\n      mapArray[editIndex] = modalContent;\n    }\n    setIsModalOpen(false);\n\n    setSharedMarkers((prevSharedMarkers) => {\n      if (prevSharedMarkers.length === 0) return [];\n\n      const updatedMarkers = [...prevSharedMarkers];\n\n      updatedMarkers[editIndex] = {\n        ...prevSharedMarkers[editIndex],\n        info: modalContent,\n      };\n\n      return updatedMarkers;\n    });\n\n    setModalContent(\"\");\n  }\n\n  function handleEditClick(index) {\n    setEditIndex(index);\n    setIsModalOpen(true);\n  }\n\n  const viewProps = {\n    isModalOpen,\n    CloseModalWindow,\n    ModalEditSubmit,\n    modalContent,\n    setModalContent,\n    handleMapClicks,\n    mapArray,\n    markerIndex,\n    handleEditClick,\n    handleDeleteClick,\n  };\n\n  // if (!isLoggedIn && !isSharedLink) {\n  //   return <LoginForm />;\n  // }\n\n  return isMobile ? <ViewMobileMain {...viewProps} /> : <ViewDesktopMain {...viewProps} />;\n\n  // <Routes>\n  //   <Route path=\"/\" element={isMobile ? <ViewMobileMain {...viewProps} /> : <ViewDesktopMain {...viewProps} />} />\n\n  //   <Route\n  //     path=\"/shared-markers\"\n  //     element={isMobile ? <ViewMobileMain {...viewProps} /> : <ViewDesktopMain {...viewProps} />}\n  //   />\n\n  //   <Route path=\"*\" element={<NotFoundPage />} />\n  // </Routes>\n  //return isMobile ? <ViewMobileMain {...viewProps} /> : <ViewDesktopMain {...viewProps} />;\n}\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}