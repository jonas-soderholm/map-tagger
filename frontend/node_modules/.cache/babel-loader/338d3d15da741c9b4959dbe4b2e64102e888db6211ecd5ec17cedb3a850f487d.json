{"ast":null,"code":"import { RegisterNewAccount, Login } from \"./LoginHandlerBackend\";\nexport const handleSignIn = (setErrorMessage, email, password, setIsLoggedIn, rememberMe) => {\n  if (!email || !password) {\n    setErrorMessage(\"Email and password are required.\");\n    return;\n  }\n  if (!email.trim().includes(\"@\")) {\n    setErrorMessage(\"Please enter a valid email address.\");\n    return;\n  }\n  Login(email, password, setIsLoggedIn, setErrorMessage, rememberMe);\n};\nexport const toggleForm = (setIsSignUp, setIsForgetPassword, setErrorMessage) => {\n  setIsSignUp(prevIsSignUp => !prevIsSignUp);\n  setIsForgetPassword(false);\n  setErrorMessage(\"\");\n};\nexport const toggleForgetPassword = (setIsForgetPassword, setErrorMessage, isForgetPassword) => {\n  setIsForgetPassword(!isForgetPassword); // Toggle isForgetPassword\n  setErrorMessage(\"\"); // Reset error message\n};\nexport const handleSignUpSubmit = (setErrorMessage, setSuccessMessage, SuccessSignUpVisuals, email, password, confirmPassword) => {\n  if (!email.trim().includes(\"@\")) {\n    setErrorMessage(\"Please enter a valid email address.\");\n    return;\n  }\n  if (!email || !password || !confirmPassword) {\n    setErrorMessage(\"All fields are required.\");\n    return;\n  }\n  if (password !== confirmPassword) {\n    setErrorMessage(\"Passwords do not match.\");\n    return;\n  }\n  if (password.length < 8) {\n    setErrorMessage(\"Password must be at least 8 characters long.\");\n    return;\n  }\n  setSuccessMessage(\"Congratulations! You have successfully created an account.\");\n  setErrorMessage(null);\n  SuccessSignUpVisuals();\n  RegisterNewAccount(email, password);\n};\nexport const handleForgetPassword = (email, setErrorMessage) => {\n  if (!email.trim().includes(\"@\")) {\n    setErrorMessage(\"Please enter a valid email address.\");\n  } else {\n    setErrorMessage(\"\");\n  }\n};\nexport function SuccessSignUpVisuals() {\n  const successElement = document.querySelectorAll(\".signup-success-hidden\");\n  successElement.forEach(element => {\n    if (element.classList.contains(\"hidden\")) {\n      element.classList.remove(\"hidden\");\n    } else {\n      element.classList.add(\"hidden\");\n    }\n  });\n}\n_c = SuccessSignUpVisuals;\nexport function SignOut(isSharedLink) {\n  if (!isSharedLink) {\n    localStorage.removeItem(\"token\");\n  }\n  window.location.href = \"http://localhost:3000/\";\n}\n_c2 = SignOut;\nvar _c, _c2;\n$RefreshReg$(_c, \"SuccessSignUpVisuals\");\n$RefreshReg$(_c2, \"SignOut\");","map":{"version":3,"names":["RegisterNewAccount","Login","handleSignIn","setErrorMessage","email","password","setIsLoggedIn","rememberMe","trim","includes","toggleForm","setIsSignUp","setIsForgetPassword","prevIsSignUp","toggleForgetPassword","isForgetPassword","handleSignUpSubmit","setSuccessMessage","SuccessSignUpVisuals","confirmPassword","length","handleForgetPassword","successElement","document","querySelectorAll","forEach","element","classList","contains","remove","add","_c","SignOut","isSharedLink","localStorage","removeItem","window","location","href","_c2","$RefreshReg$"],"sources":["/home/jonas/web-projects/trash-tagger/frontend/src/components/auth/LoginLogic.jsx"],"sourcesContent":["import { RegisterNewAccount, Login } from \"./LoginHandlerBackend\";\n\nexport const handleSignIn = (setErrorMessage, email, password, setIsLoggedIn, rememberMe) => {\n  if (!email || !password) {\n    setErrorMessage(\"Email and password are required.\");\n    return;\n  }\n  if (!email.trim().includes(\"@\")) {\n    setErrorMessage(\"Please enter a valid email address.\");\n    return;\n  }\n\n  Login(email, password, setIsLoggedIn, setErrorMessage, rememberMe);\n};\n\nexport const toggleForm = (setIsSignUp, setIsForgetPassword, setErrorMessage) => {\n  setIsSignUp((prevIsSignUp) => !prevIsSignUp);\n  setIsForgetPassword(false);\n  setErrorMessage(\"\");\n};\n\nexport const toggleForgetPassword = (setIsForgetPassword, setErrorMessage, isForgetPassword) => {\n  setIsForgetPassword(!isForgetPassword); // Toggle isForgetPassword\n  setErrorMessage(\"\"); // Reset error message\n};\n\nexport const handleSignUpSubmit = (\n  setErrorMessage,\n  setSuccessMessage,\n  SuccessSignUpVisuals,\n  email,\n  password,\n  confirmPassword\n) => {\n  if (!email.trim().includes(\"@\")) {\n    setErrorMessage(\"Please enter a valid email address.\");\n    return;\n  }\n  if (!email || !password || !confirmPassword) {\n    setErrorMessage(\"All fields are required.\");\n    return;\n  }\n  if (password !== confirmPassword) {\n    setErrorMessage(\"Passwords do not match.\");\n    return;\n  }\n  if (password.length < 8) {\n    setErrorMessage(\"Password must be at least 8 characters long.\");\n    return;\n  }\n\n  setSuccessMessage(\"Congratulations! You have successfully created an account.\");\n  setErrorMessage(null);\n  SuccessSignUpVisuals();\n  RegisterNewAccount(email, password);\n};\n\nexport const handleForgetPassword = (email, setErrorMessage) => {\n  if (!email.trim().includes(\"@\")) {\n    setErrorMessage(\"Please enter a valid email address.\");\n  } else {\n    setErrorMessage(\"\");\n  }\n};\n\nexport function SuccessSignUpVisuals() {\n  const successElement = document.querySelectorAll(\".signup-success-hidden\");\n\n  successElement.forEach((element) => {\n    if (element.classList.contains(\"hidden\")) {\n      element.classList.remove(\"hidden\");\n    } else {\n      element.classList.add(\"hidden\");\n    }\n  });\n}\n\nexport function SignOut(isSharedLink) {\n  if (!isSharedLink) {\n    localStorage.removeItem(\"token\");\n  }\n\n  window.location.href = \"http://localhost:3000/\";\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}