{"ast":null,"code":"export async function RegisterNewAccount(email,password){console.log(\"email: \",email);console.log(\"Pass: \",password);try{const response=await fetch(\"http://localhost:3000/register\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,password})});if(!response.ok){throw new Error(\"Failed to register\");}const data=await response.json();console.log(\"Registration successful:\",data);// Optionally, you can return data or perform other actions based on the response\nreturn data;}catch(error){console.error(\"Error registering account:\",error.message);// Handle the error (e.g., display an error message to the user)\n}}export async function Login(email,password,setIsLoggedIn,setErrorMessage,rememberMe){try{const response=await fetch(\"http://localhost:3000/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,password})});if(!response.ok){throw new Error(\"Failed to login\");}const data=await response.json();console.log(\"Login successful:\",data);// Set the isLoggedIn state to true\nsetIsLoggedIn(true);// Store the token securely\nif(rememberMe){localStorage.setItem(\"token\",data.token);}// Optionally, you can return data or perform other actions based on the response\nreturn data;}catch(error){setErrorMessage(\"Wrong email or password\");console.error(\"Error logging in:\",error.message);}}","map":{"version":3,"names":["RegisterNewAccount","email","password","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","message","Login","setIsLoggedIn","setErrorMessage","rememberMe","localStorage","setItem","token"],"sources":["/home/jonas/web-projects/trash-tagger/frontend/src/components/auth/LoginHandlerBackend.jsx"],"sourcesContent":["export async function RegisterNewAccount(email, password) {\n  console.log(\"email: \", email);\n  console.log(\"Pass: \", password);\n\n  try {\n    const response = await fetch(\"http://localhost:3000/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to register\");\n    }\n\n    const data = await response.json();\n    console.log(\"Registration successful:\", data);\n\n    // Optionally, you can return data or perform other actions based on the response\n    return data;\n  } catch (error) {\n    console.error(\"Error registering account:\", error.message);\n    // Handle the error (e.g., display an error message to the user)\n  }\n}\n\nexport async function Login(email, password, setIsLoggedIn, setErrorMessage, rememberMe) {\n  try {\n    const response = await fetch(\"http://localhost:3000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to login\");\n    }\n\n    const data = await response.json();\n    console.log(\"Login successful:\", data);\n\n    // Set the isLoggedIn state to true\n    setIsLoggedIn(true);\n\n    // Store the token securely\n    if (rememberMe) {\n      localStorage.setItem(\"token\", data.token);\n    }\n\n    // Optionally, you can return data or perform other actions based on the response\n    return data;\n  } catch (error) {\n    setErrorMessage(\"Wrong email or password\");\n    console.error(\"Error logging in:\", error.message);\n  }\n}\n"],"mappings":"AAAA,MAAO,eAAe,CAAAA,kBAAkBA,CAACC,KAAK,CAAEC,QAAQ,CAAE,CACxDC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAEH,KAAK,CAAC,CAC7BE,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAEF,QAAQ,CAAC,CAE/B,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,gCAAgC,CAAE,CAC7DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEV,KAAK,CAAEC,QAAS,CAAC,CAC1C,CAAC,CAAC,CAEF,GAAI,CAACG,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,oBAAoB,CAAC,CACvC,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAClCZ,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEU,IAAI,CAAC,CAE7C;AACA,MAAO,CAAAA,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdb,OAAO,CAACa,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAACC,OAAO,CAAC,CAC1D;AACF,CACF,CAEA,MAAO,eAAe,CAAAC,KAAKA,CAACjB,KAAK,CAAEC,QAAQ,CAAEiB,aAAa,CAAEC,eAAe,CAAEC,UAAU,CAAE,CACvF,GAAI,CACF,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,6BAA6B,CAAE,CAC1DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEV,KAAK,CAAEC,QAAS,CAAC,CAC1C,CAAC,CAAC,CAEF,GAAI,CAACG,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,iBAAiB,CAAC,CACpC,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAClCZ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAEU,IAAI,CAAC,CAEtC;AACAK,aAAa,CAAC,IAAI,CAAC,CAEnB;AACA,GAAIE,UAAU,CAAE,CACdC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAET,IAAI,CAACU,KAAK,CAAC,CAC3C,CAEA;AACA,MAAO,CAAAV,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdI,eAAe,CAAC,yBAAyB,CAAC,CAC1CjB,OAAO,CAACa,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAACC,OAAO,CAAC,CACnD,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}